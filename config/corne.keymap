#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"                // keyposition helpers
#include "../zmk-nodefree-config/international_chars/french.dtsi"

/* layer and key shortcuts */

#define ___ &trans
#define XXX &none

ZMK_UNICODE_SINGLE(euro, N2, N0, A, C)  // â‚¬

#define QUICK_TAP_MS 175

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // thumbs

#define DEF 0
#define SYM 1
#define NUM 2
#define NAV 3
#define MED 4
#define GAM 5

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/ {
    behaviors {
        hml: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        shiftlock: shift_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_LOCK";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };

        combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <50>;
                key-positions = <LH2 LH1 LH0>;
                bindings = <&tog GAM>;
            };
        };

        atexcl: at_exclamation {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bspcdel: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";        

        default {
            bindings = <
&kp LGUI   &kp Q        &kp W        &kp F         &kp P          &kp B            &kp J        &kp L         &kp U         &kp Y        &kp SEMI     &kp MINUS
&kp TAB    &hml LGUI A  &hml LALT R  &hml LSHFT S  &hml LCTRL T   &kp G            &kp M        &hmr RCTRL N  &hmr LSHFT E  &hmr LALT I  &hmr LGUI O  &kp APOS
&kp LCTRL  &kp Z        &kp X        &kp C         &kp D          &kp V            &lt MED K    &kp H         &kp COMMA     &kp DOT      &kp FSLH     &atexcl
                                     &kp LALT      &bspcdel       &lt NUM SPACE    &lt NAV RET  &lt SYM ESC   &caps_word
            >;
        };

        symbol_layer {
            bindings = <
&trans    &kp PRCNT  &kp AMPS  &kp GRAVE  &kp LBRC   &kp RBRC     &trans  &trans     &trans     &trans    &trans    &trans
&euro     &kp CARET  &kp STAR  &kp DLLR   &kp LPAR   &kp RPAR     &trans  &kp RSHFT  &kp RCTRL  &kp LALT  &kp RGUI  &trans
&kp LSHFT &kp TILDE  &kp HASH  &kp BSLH   &kp LBKT   &kp RBKT     &trans  &trans     &trans     &trans    &trans    &trans
                               &kp LT     &kp EQUAL  &kp GT       &trans  &trans     &trans
            >;
        };

        numeric_layer {
            bindings = <
&none   &none   &kp F7  &kp F8  &kp F9  &kp F10    &kp FSLH   &kp N7  &kp N8  &kp N9  &kp STAR  &none 
&none   &none   &kp F4  &kp F5  &kp F6  &kp F11    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp PLUS  &none 
&none   &none   &kp F1  &kp F2  &kp F3  &kp F12    &kp N0     &kp N1  &kp N2  &kp N3  &kp DOT   &none 
                        &none   &none   &none      &trans     &trans  &trans 
            >;
        };

        navigation_layer {
            bindings = <
&none   &none      &none      &none      &none      &none      &mkp LCLK  &none     &kp PG_DN  &kp PG_UP  &none      &none
&none   &kp LGUI   &kp LALT   &kp LSHFT  &kp LCTRL  &kp TAB    &mkp MCLK  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none 
&none   &kp LC(Z)  &kp LC(X)  &kp LC(C)  &none      &kp LC(V)  &mkp RCLK  &none     &kp END    &kp HOME   &none      &none
                              &none      &none      &none      &none      &none     &none 
            >;
        };
        media_layer {
            bindings = <
&none  &none         &kp C_MUTE     &kp C_VOL_DN  &kp C_VOL_UP     &none         &none         &none         &none         &bt BT_PRV    &bt BT_NXT    &bt BT_CLR
&none  &none         &kp C_PREV     &kp C_AC_BACK &kp C_AC_FORWARD &kp C_NEXT    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none 
&none  &kp C_BRI_MIN &kp C_BRI_DN   &kp C_BRI_UP  &kp C_BRI_MAX    &none         &none         &none         &none         &none         &none         &none 
                                    &none         &none            &kp C_PP      &none         &none         &none 
            >;
        };
        gaming_layer {
            bindings = <
&kp ESC   &kp Q        &kp W        &kp E           &kp R         &kp T          &kp Y      &kp U         &kp I          &kp O        &kp P         &kp C_VOL_UP
&kp TAB   &kp A        &kp S        &kp D           &kp F         &kp G          &kp H      &kp J         &kp K          &kp L        &kp DLLR      &kp C_VOL_DN
&kp LSHFT &kp Z        &kp X        &kp C           &kp V         &kp B          &kp N      &kp M         &kp COMMA      &kp DOT      &kp MINUS     &kp DEL
                                    &lt 3 LCTRL     &kp LALT      &lt 1 SPACE    &lt 2 RET  &kp ESC       &tog GAM
            >;
        };
    };  
};
